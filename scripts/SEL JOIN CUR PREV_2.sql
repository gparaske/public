USE ANACREDIT

DECLARE '2024-02-29' datetime ;
--SET '2024-02-29' ='"+ @[User::varReportingDate] +"';
--DECLARE @OBS varchar(20);
--SET @OBS ='GR011';

-- CID CID CID CID
-- CID CID CID CID
-- CID CID CID CID
-- CID CID CID CID

--SELECT SOURCE_SYSTEM_ID, * FROM dbo.CID_SUB WHERE INSID='1969899820P8' AND REF_DT='2024-02-29'

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.CID_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_CID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')
--SELECT * FROM dbo.IFD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND INSTST <> 0 AND SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')--2975

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CID_SUB A WITH(NOLOCK)
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST <> 0 AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα IFD(A), όσα δεν έχουν CID αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_CID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')
INSERT INTO dbo.CID_SUB
SELECT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_CID + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
	  ,C.[CID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[CRL]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
--SELECT A.*
FROM dbo.IFD_SUB A WITH(NOLOCK)
LEFT JOIN dbo.CID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID
LEFT JOIN dbo.CID_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND B.OBS_A_ID IS NULL
AND C.OBS_A_ID IS NOT NULL--8941

--SELECT * FROM dbo.CID_SUB WHERE SOURCE_SYSTEM_ID='INSTI'
--SELECT INSTST, * FROM dbo.IFD_SUB WHERE REF_DT='2024-02-29' AND INSID='2043273008P8'
--SELECT * FROM dbo.CID_SUB WHERE SOURCE_SYSTEM_ID='INSTI' AND INSID='2043273008P8'

-- CRD CRD CRD CRD
-- CRD CRD CRD CRD
-- CRD CRD CRD CRD
-- CRD CRD CRD CRD

--SELECT CID FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI','INSTU')--8941

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.CRD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_CRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID AND B.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

--Βρες τα μοναδικά CID
DROP TABLE IF EXISTS #CID
SELECT A.OBS_A_ID, A.REF_DT, A.CID--, A.SOURCE_SYSTEM_ID
INTO #CID
FROM dbo.CID_SUB A 
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29'-- AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
GROUP BY A.OBS_A_ID, A.REF_DT, A.CID--, A.SOURCE_SYSTEM_ID

-- Από τα νέα CID(A), όσα δεν έχουν CRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_CRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')
INSERT INTO dbo.CRD_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_CRD + ROW_NUMBER() OVER (ORDER BY B.REF_DT) AS [RECID]
      ,C.[CID]
      ,C.[NIDT]
      ,C.[NID]
      ,C.[AFM]
      ,C.[IMO]
      ,C.[GEMH]
      ,C.[LEI]
      ,C.[ESD]
      ,C.[HOUID]
      ,C.[IPUID]
      ,C.[UPCID]
      ,C.[NAME]
      ,C.[AStr]
      ,C.[AC]
      ,C.[ACTY]
      ,C.[APC]
      ,C.[ACTR]
      ,C.[LF]
      ,C.[ISctr]
      ,C.[EA]
      ,C.[SLP]
      ,C.[DILP]
      ,C.[ES]
      ,C.[DES]
      ,C.[NE]
      ,C.[BST]
      ,C.[AT]
      ,C.[AST]
      ,C.[CR]
      ,C.[OLD]
      ,C.[PR]
      ,C.[HO]
      ,C.[PAR]
      ,C.[UP]
      ,C.[OCR]
      ,C.[SRV]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
      ,C.[DEL_APPV_DIV_ID]
      ,C.[DEPT_APPV_DIV_ID]
      ,C.[EM]
      ,C.[PH]
FROM #CID A 
LEFT JOIN dbo.CRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID
LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29' --AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND B.CID IS NULL
AND C.CID IS NOT NULL--223

--CID	CNID	INSID
--672520036	0917048190	0918670374P8
--672520036	0917048190	0918670374P8_1

-- CRID CRID CRID CRID
-- CRID CRID CRID CRID
-- CRID CRID CRID CRID
-- CRID CRID CRID CRID

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.CRID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.CRID_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_CRID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CRID_SUB A WITH(NOLOCK)
INNER JOIN #CID B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα CID(A), όσα δεν έχουν CRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
INSERT INTO dbo.CRID_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_CRID + ROW_NUMBER() OVER (ORDER BY B.REF_DT) AS [RECID]
      ,C.[CID]
      ,C.[PD]
      ,C.[DS]
      ,C.[DSD]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
FROM #CID A 
LEFT JOIN dbo.CRID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID
LEFT JOIN dbo.CRID_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29' --AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND B.CID IS NULL
AND C.CID IS NOT NULL--146

-- JLD JLD JLD JLD
-- JLD JLD JLD JLD
-- JLD JLD JLD JLD
-- JLD JLD JLD JLD

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.JLD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.JLD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_JLD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.JLD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.JLD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID AND B.INSID=A.INSID AND B.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα CID/INSID(A), όσα δεν έχουν JLD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
INSERT INTO dbo.JLD_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_JLD + ROW_NUMBER() OVER (ORDER BY B.REF_DT) AS [RECID]
      ,C.[CID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[JLBAM]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
FROM dbo.CID_SUB A
LEFT JOIN dbo.JLD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID AND B.INSID=A.INSID
LEFT JOIN dbo.JLD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.CID=A.CID AND C.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND B.CID IS NULL
AND C.CID IS NOT NULL--146

-- AD AD AD AD
-- AD AD AD AD
-- AD AD AD AD
-- AD AD AD AD

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.AD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.AD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_AD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.AD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.AD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST <> 0 AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα INSID(A), όσα δεν έχουν AD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
INSERT INTO dbo.AD_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_AD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,C.[ACC_ID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[ACCNTC]
      ,C.[BSR]
      ,C.[ACCMRO]
      ,C.[ACCMIMP]
      ,C.[IMPS]
      ,C.[IMPASSM]
      ,C.[SRCENC]
      ,C.[ACCMFVC]
      ,C.[PERS]
      ,C.[PRESD]
      ,C.[PRVOB]
      ,C.[FRBS]
      ,C.[FRBSD]
      ,C.[RECSD]
      ,C.[PP]
      ,C.[CAMM]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
FROM dbo.IFD_SUB A WITH(NOLOCK)
LEFT JOIN dbo.AD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID
LEFT JOIN dbo.AD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND B.OBS_A_ID IS NULL
AND C.OBS_A_ID IS NOT NULL--2975

-- IPRD IPRD IPRD IPRD
-- IPRD IPRD IPRD IPRD
-- IPRD IPRD IPRD IPRD
-- IPRD IPRD IPRD IPRD

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.IPRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.IPRD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_IPRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.IPRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.IPRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID AND B.INSTST <> 0 AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα INSID(A), όσα δεν έχουν IPRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_IPRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.IPRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')
INSERT INTO dbo.IPRD_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_IPRD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[PRID]
      ,C.[PRAV]
      ,C.[PR3PPRI]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
FROM dbo.IFD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IPRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.INSID=A.INSID AND C.CNID=A.CNID
--LEFT JOIN dbo.IPRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID--2:26 min
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND NOT EXISTS (SELECT NULL FROM dbo.IPRD_SUB B WITH(NOLOCK) WHERE B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID)--55 sec
--AND B.OBS_A_ID IS NULL

--CNID	INSID	PRID
--0117001010	0111966308P8	2128063
--0117001010	0111966308P8	2130846
--0117001010	0111966308P8	2130847
--0117001010	0111966308P8	2407494
--0117001010	0111966308P8	400724974

--SELECT QUALIFICATION_FLAG, * FROM dbo.IPRD_SUB WHERE REF_DT='2023-12-31' AND INSID='0111966308P8'--5
--SELECT QUALIFICATION_FLAG, * FROM dbo.IPRD_SUB WHERE REF_DT='2024-02-29' AND INSID='0111966308P8'--0
--SELECT QUALIFICATION_FLAG, * FROM dbo.IFD_SUB WHERE REF_DT='2024-02-29' AND INSID='0111966308P8'--1

-- PRD PRD PRD PRD
-- PRD PRD PRD PRD
-- PRD PRD PRD PRD
-- PRD PRD PRD PRD

--Βρες τα μοναδικά PRD
DROP TABLE IF EXISTS #PRD_UNQ
SELECT A.OBS_A_ID, A.REF_DT, A.PRID, A.SOURCE_SYSTEM_ID
INTO #PRD_UNQ
FROM dbo.IPRD_SUB A 
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
GROUP BY A.OBS_A_ID, A.REF_DT, A.PRID, A.SOURCE_SYSTEM_ID

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.PRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.PRD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2024-02-29' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_PRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.PRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.PRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IPRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.PRID=A.PRID AND B.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα INSID(A), όσα δεν έχουν IPRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_PRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.PRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')
INSERT INTO dbo.PRD_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_PRD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,C.[PRID]
      ,C.[PRCID]
      ,C.[PRT]
      ,C.[PRV]
      ,C.[PRVT]
      ,C.[PRVA]
      ,C.[RECL]
      ,C.[PRVD]
      ,C.[PRMD]
      ,C.[PROV]
      ,C.[PROVD]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
FROM #PRD_UNQ A WITH(NOLOCK)
INNER JOIN dbo.PRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2024-02-29',-1) AND C.PRID=A.PRID
LEFT JOIN dbo.PRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.PRID=A.PRID--2:26 min
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
--AND NOT EXISTS (SELECT NULL FROM dbo.IPRD_SUB B WITH(NOLOCK) WHERE B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID)--55 sec
AND B.OBS_A_ID IS NULL

-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.PRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.PRCID=A.CID AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29'
AND A.QUALIFICATION_FLAG=0

SET @MAX_RECID_CRD = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2024-02-29')

--Βρες τα μοναδικά CRD
DROP TABLE IF EXISTS #CRD
SELECT B.OBS_A_ID, B.REF_DT, B.CID
INTO #CRD
FROM dbo.PRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=EOMONTH(A.REF_DT,-1) AND B.CID=A.PRCID
LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=A.REF_DT AND C.CID=A.PRCID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND C.CID IS NULL
GROUP BY B.OBS_A_ID, B.REF_DT, B.CID

--Βρες τα μοναδικά CRD
DROP TABLE IF EXISTS #CRD
SELECT B.OBS_A_ID, A.REF_DT, B.CID
INTO #CRD
FROM dbo.PRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=EOMONTH(A.REF_DT,-1) AND B.CID=A.PRCID
--LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=A.REF_DT AND C.CID=A.PRCID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2024-02-29' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
--AND C.CID IS NULL
GROUP BY B.OBS_A_ID, A.REF_DT, B.CID

DROP TABLE IF EXISTS #CRD_2
SELECT A.OBS_A_ID, A.REF_DT, A.CID
INTO #CRD_2
FROM #CRD A WITH(NOLOCK)
LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=A.REF_DT AND C.CID=A.CID
WHERE C.CID IS NULL
GROUP BY A.OBS_A_ID, A.REF_DT, A.CID

-- Μετέφερε τα CRD(Β) από τον προηγούμενο(Α). (Insert)
INSERT INTO dbo.CRD_SUB
SELECT DISTINCT '2024-02-29' AS [REF_DT]
      ,A.[REP_A_ID]
      ,A.[OBS_A_ID]
	  ,@MAX_RECID_CRD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,A.[CID]
      ,A.[NIDT]
      ,A.[NID]
      ,A.[AFM]
      ,A.[IMO]
      ,A.[GEMH]
      ,A.[LEI]
      ,A.[ESD]
      ,A.[HOUID]
      ,A.[IPUID]
      ,A.[UPCID]
      ,A.[NAME]
      ,A.[AStr]
      ,A.[AC]
      ,A.[ACTY]
      ,A.[APC]
      ,A.[ACTR]
      ,A.[LF]
      ,A.[ISctr]
      ,A.[EA]
      ,A.[SLP]
      ,A.[DILP]
      ,A.[ES]
      ,A.[DES]
      ,A.[NE]
      ,A.[BST]
      ,A.[AT]
      ,A.[AST]
      ,A.[CR]
      ,A.[OLD]
      ,A.[PR]
      ,A.[HO]
      ,A.[PAR]
      ,A.[UP]
      ,A.[OCR]
      ,A.[SRV]
      ,A.[INSERT_TIMESTAMP]
      ,A.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,A.[QUALIFICATION_FLAG]
      ,CONCAT(REPLACE(CAST(CAST('2024-02-29' AS DATE) AS NVARCHAR),'-',''), '01') AS [DATA_VERSION]
      ,A.[DEL_APPV_DIV_ID]
      ,A.[DEPT_APPV_DIV_ID]
      ,A.[EM]
      ,A.[PH]
FROM dbo.CRD_SUB A WITH(NOLOCK)
INNER JOIN #CRD_2 C ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT='2024-02-29' AND C.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT=EOMONTH('2024-02-29',-1) 

-- UPDATE AD
-- UPDATE AD
-- UPDATE AD
-- UPDATE AD

--Όσα έχουν INSTST=3 πρέπει να έχουν ACCMRO = OUTAM πριν τον μηδενισμό
UPDATE A SET
  A.ACCMRO=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (B.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	ELSE ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (B.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
	END
)
, A.BSR='3'
--SELECT A.QUALIFICATION_FLAG, A.BSR, B.OUTAM, B.OPB, B.OOB, B.AMP
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST IN ('3')
LEFT JOIN dbo.IFD_SUB COF WITH(NOLOCK) ON COF.OBS_A_ID=A.OBS_A_ID AND COF.REF_DT=A.REF_DT AND COF.INSID+'_1'=A.INSID
AND ISNUMERIC(COF.ACC_ID) = 1
LEFT JOIN src.EDW_com_FX_RATES fx WITH(NOLOCK) ON fx.FX_CCY_DESCR=B.CUR AND fx.DT_REC<='2024-02-29' AND fx.FX_DATE>'2024-02-29'
LEFT JOIN src.EDW_LEND_ACC_LOAN_BAL_EOD bal WITH(NOLOCK) ON bal.ACC_ID = A.ACC_ID AND bal.DT_EFF<='2024-02-29' AND bal.DT_END>'2024-02-29'
LEFT JOIN src.EDW_lend_ACC_COFNC cofnc ON cofnc.ACC_ID = A.ACC_ID AND cofnc.DT_END>EOMONTH('2024-02-29',-1) and cofnc.DT_EFF<=EOMONTH('2024-02-29',-1) AND cofnc.RCD_STS=1 AND cofnc.SENIORITY_PCT<>100
LEFT JOIN src.EDW_acc_ACC ACC ON ACC.ACC_ID = A.ACC_ID AND ACC.DT_END>'2024-02-29' and ACC.DT_EFF<='2024-02-29'
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29'

--Τα δάνεια που αποπληρώθηκαν πλήρως INSTST='1' σε ένα μήνα αναφοράς πρέπει να αναγγελθούν για έναν επιπλέον μήνα αναφοράς με μηδενικά 
--Outstanding Nominal Amount (OUTAM=0), Outstanding Principal Balance (OPB=0) και Other Outstanding Balances (OOB=0), με ποσό στο πεδίο Amount Paid (AMP<>0),
--το πεδίο Balance Sheet Recognition του πίνακα Accounting συμπληρωμένο με την τιμή 3: Entirely derecognised (BSR='3')
--και το πεδίο Instrument Status Flag με την τιμή1: Non-Active (totally repaid) (νέος έλεγχος 99005 με αναδρομική ισχύ από στοιχεία Δεκεμβρίου 2023)
--Ομοίως και όσα μεταβιβάστηκαν πλήρως INSTST='2'
UPDATE A SET
  A.BSR='3'
--SELECT A.QUALIFICATION_FLAG, A.BSR, B.OUTAM, B.OPB, B.OOB, B.AMP
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST IN ('1','2')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29'

--Όταν κάναμε το IFD.INSTST='4' χρειάστηκε να κάνουμε και τα παρακάτω:
UPDATE A SET
  A.BSR='3'
--, A.ACCNTC='' --5110 Accounting classification
--, A.CAMM=NULL --5055 Carrying amount
--, A.ACCMIMP=NULL, A.ACCMFVC=NULL --5075 Accumulated impairment,  Accumulated changes in fair value due to credit risk
, A.IMPASSM='' --5034 Impairment assessment method
, A.IMPS='' --5074 Type of impairment
--SELECT A.QUALIFICATION_FLAG, A.BSR, A.ACCNTC, A.CAMM, *
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST='4'
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29'

--Επίσης είχαμε 2150 σκασίματα για όλα τα AD_SUB με BSR='3'. Μας έσκασαν με κωδικούς 1073 και 1074 και ξεπεράστηκε το πρόβλημα με τις παρακάτω τιμές.
UPDATE A SET
  A.SRCENC='1' --1073 Sources of encumbrance
, A.ACCNTC='' --5110 Accounting classification
, A.ACCMRO = (CASE WHEN B.INSTST='3' THEN A.ACCMRO ELSE 0 END) --1074 Accumulated write-offs
, A.CAMM=NULL --5055 Carrying amount
, A.ACCMIMP=NULL, A.ACCMFVC=NULL --5075 Accumulated impairment,  Accumulated changes in fair value due to credit risk
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2024-02-29' AND A.BSR='3'


-- UPDATE JLD
-- UPDATE JLD
-- UPDATE JLD
-- UPDATE JLD
-- UPDATE JLD

UPDATE A SET A.JLBAM=B.OUTAM --5027 Joint liability amount
--SELECT B.INSID, B.OUTAM, A.JLBAM
FROM dbo.JLD_SUB A
INNER JOIN dbo.IFD_SUB B ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND A.INSID=B.INSID AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
WHERE A.OBS_A_ID='GR011' AND A.REF_DT='2024-02-29' 
