USE ANACREDIT

SELECT * FROM dbo.IFD_SUB WHERE INSID='0114485297P8' AND REF_DT='2023-12-31' 
ORDER BY REF_DT
SELECT * FROM EDW_UAT.ACC.ACC WHERE ACC_ID=54062800

select * FROM dbo.CID_SUB WHERE INSID='0114485297P8' AND REF_DT='2023-12-31'
SELECT * FROM dbo.CRD_SUB WHERE CID = '3609127210' AND REF_DT>='2023-11-30'

SELECT * FROM dbo.IFD_SUB WHERE REF_DT='2023-12-31' AND INSTST='3' AND INSID='9745183510P8'
SELECT ACCMRO, BSR, * FROM dbo.AD_SUB WHERE REF_DT='2023-12-31' AND INSID='9745183510P8'

SELECT * FROM dbo.AD_SUB WHERE REF_DT='2023-12-31' AND QUALIFICATION_FLAG=1


--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
--Καταλαβαίνουμε τις αλλαγές από όσα έχουν τα νέα SOURCE_SYSTEM_ID 'INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3'
--INSTI σημαίνει ότι αυτόν τον μήνα χρειάστηκε να κάνουμε insert την εγγραφή.
--INSTU σημαίνει ότι η εγγραφή υπήρχε και απλά θα κάνουμε update το status.
DELETE FROM dbo.IFD_SUB WHERE OBS_A_ID = 'GR011' AND REF_DT='2023-12-31' AND INSTST <> 0 AND SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.INSTST = 0
  , B.SOURCE_SYSTEM_ID = 'DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.IFD_SUB B
WHERE B.OBS_A_ID = 'GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU_1','INSTU_2','INSTU_3')

DECLARE @MAX_RECID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.IFD_SUB WHERE OBS_A_ID = 'GR011' AND REF_DT='2023-12-31')

--θα κάνει inserts όλα όσα 
--τον προηγούμενο ήταν ενεργά (Q=1 και INSTST=0) ή πρέπει να συνεχίσουν οι αποστολές (Q=1 και INSTST = 3 και INSTI_1 ή INSTI_2) 
--που αυτόν τον μήνα λείπουν εντελώς ως εγγραφές.
INSERT INTO dbo.IFD_SUB
SELECT '2023-12-31' AS [REF_DT]
      ,A.[REP_A_ID]
      ,A.[OBS_A_ID]
      ,@MAX_RECID + ROW_NUMBER() OVER (PARTITION BY B.CNID, B.INSID ORDER BY B.CNID, B.INSID) AS [RECID]
      ,A.[ACC_ID]
      ,A.[CNID]
      ,A.[INSID]
      ,A.[INST]
      ,A.[AMRT]
      ,A.[CUR]
      ,A.[FDRCY]
      ,A.[INCD]
      ,A.[INSEOD]
      ,A.[INTRC]
      ,A.[INTRF]
      ,A.[INTRRF]
      ,A.[INTRSM]
      ,A.[INTRT]
      ,A.[LFMD]
      ,A.[TAM]
      ,A.[PF]
      ,A.[PFL]
      ,A.[PRPS]
      ,A.[RCRS]
      ,A.[REFD]
      ,A.[STLD]
      ,A.[SUBD]
      ,A.[SCID]
      ,A.[RPR]
      ,A.[FVCCR]
      ,A.[INTRD]
      ,A.[INTRRD]
      ,A.[INSTDS]
      ,A.[INSTDSD]
      ,A.[TRAM]
      ,A.[ARRRS]
      ,A.[PDD]
      ,A.[SECT]
      ,A.[OUTAM]
      ,A.[INTRACC]
      ,A.[OBSAM]
      ,A.[INSERT_TIMESTAMP]
      ,A.[INSERT_ETL_RUN_ID]
      --,'INSTI' AS [SOURCE_SYSTEM_ID]
	  ,CASE
	   WHEN A.SOURCE_SYSTEM_ID NOT IN ('INSTI_1','INSTI_2','INSTU_1','INSTU_2')
	   THEN 'INSTI_1'
	   ELSE CONCAT('INSTI_',CAST(CAST(SUBSTRING(A.SOURCE_SYSTEM_ID,7,1) AS INT)+1 AS NVARCHAR(1))) --Αυξάνει τον μετρητή
	   END AS [SOURCE_SYSTEM_ID]
      ,A.[QUALIFICATION_FLAG]
      ,A.[DATA_VERSION]
      ,A.[OPB]
      ,A.[OOB]
      ,A.[AMP]
      ,4 AS [INSTST]
--	  ,ROW_NUMBER() OVER (PARTITION BY B.CNID, B.INSID ORDER BY B.CNID, B.INSID) AS NUM 
FROM dbo.IFD_SUB A
LEFT JOIN dbo.IFD_SUB B ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT='2023-12-31' AND B.CNID=A.CNID AND B.INSID=A.INSID
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT=EOMONTH('2023-12-31',-1) 
AND (
     (A.QUALIFICATION_FLAG=1 AND A.INSTST=0)--τον προηγούμενο μήνα το είχαμε στείλει ως ενεργή
	 OR
	   (A.QUALIFICATION_FLAG=1 AND A.INSTST=3 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTU_1','INSTU_2'))
    )
AND B.CNID IS NULL --αυτόν τον μήνα δεν υπάρχει καθόλου η εγγραφή άρα INSERT με άλλο INSTST<>0





--REFRESH FIELDS REFRESH FIELDS
--REFRESH FIELDS REFRESH FIELDS
--REFRESH FIELDS REFRESH FIELDS
--REFRESH FIELDS REFRESH FIELDS

--ADPTV->U&I->OPB=OUTAM=0,AMP=δεν αλλάζω
--NOSTRO->U->δεν θα τα στέλνουμε (γιατί αν κάποιο NOSTRO έγινε Q=0 για κάποιο λόγο αποκλείεται να έκλεισε ώστε να του αλλάξω το status)
--NOSTRO->Ι->Account->OPB=OUTAM=src.FILE_NOSTRO_BALANCES.We_Balance,OOB=δεν το αλλάζω,AMP=δεν το αλλάζω
--FBL->U&I->CONTRACT_REFERENCE->src.FILE_LOANDEPO_FBL.OUTSTANDING,AMP=δεν το αλλάζω
--VOSTRO->DEPS&DEPE->OPB=OUTAM=src.EDW_DEP_ACC_DEP_BAL.EOD_BAL_ACCNT->EUR. TODO (δεν δουλεύει σωστά. Φέρνει κενό για τον ένα που υπάρχει. Ίσως επειδή μπορεί να είναι καρφωτή εγγραφή.)
--rest->U->δεν χρειάζονται Refresh γιατί ήδη είναι ενημερωμένα σωστά
--rest->I->Refresh Fields: OPB,OUTAM,OOB,AMP,INTRACC,ARRRS,TRAM,PDD,INTRRD (τα FVCCR, INSTDSD τα δίνουμε 0/null)

UPDATE A
SET A.OUTAM=0, A.OPB=0
--SELECT A.*
FROM dbo.IFD_SUB A
LEFT JOIN src.FILE_LOANDEPO_FBL B WITH(NOLOCK) ON B.CONTRACT_REFERENCE+'ADPTV'=A.INSID
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND A.INSID LIKE '%ADPTV'

UPDATE A
SET A.OUTAM=ROUND(B.We_Balance / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0 OR B.We_Balance=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2), 
    A.OPB=ROUND(B.We_Balance / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0 OR B.We_Balance=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--OPB=OUTAM
FROM dbo.IFD_SUB A
LEFT JOIN src.FILE_NOSTRO_BALANCES B WITH(NOLOCK) ON B.Account+'NOSTRO'=A.INSID
LEFT JOIN src.EDW_com_FX_RATES fx WITH(NOLOCK) ON fx.FX_CCY_DESCR=A.CUR AND fx.DT_REC<='2024-01-31' AND fx.FX_DATE>'2024-01-31'
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
AND A.INSID LIKE '%NOSTRO'

UPDATE A
SET A.OUTAM=B.OUTSTANDING, A.OPB=B.OUTSTANDING
--SELECT B.OUTSTANDING, A.*
FROM dbo.IFD_SUB A
LEFT JOIN src.FILE_LOANDEPO_FBL B WITH(NOLOCK) ON B.CONTRACT_REFERENCE+'FBL'=A.INSID
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND A.INSID LIKE '%FBL'

--VOSTRO->TODO
--SELECT A.*
--FROM dbo.IFD_SUB A
--LEFT JOIN src.EDW_acc_ACC_SRGT B WITH(NOLOCK) ON B.ACC_UNQ_CD+B.SRC_STM_ID=A.INSID
--LEFT JOIN src.EDW_DEP_ACC_DEP_BAL C ON C.ACC_ID=B.ACC_ID
--WHERE A.OBS_A_ID = 'GR011'-- AND A.REF_DT='2023-12-31' --AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
----WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' --AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
--AND A.INSID LIKE '%DEP%'--VOSTRO
----OPB=OUTAM=src.EDW_DEP_ACC_DEP_BAL.EOD_BAL_ACCNT->EUR
--SELECT * FROM src.EDW_DEP_ACC_DEP_BAL WHERE ACC_ID=3547394
--SELECT * FROM EDW_UAT.DEP.ACC_DEP_BAL WHERE ACC_ID=3547394
--SELECT * FROM SRC.EDW_lend_ACC_LOAN_BAL_EOD WHERE ACC_ID=3547394
--SELECT * FROM EDW_UAT.lend.ACC_LOAN_BAL_EOD WHERE ACC_ID=3547394
--SELECT * FROM EDW_UAT.ACC.ACC_SRGT WHERE ACC_ID=3547394

--rest->I->Refresh Fields: OPB,OUTAM,OOB,AMP,INTRACC,ARRRS,TRAM,PDD,INTRRD (τα FVCCR, INSTDSD τα δίνουμε 0/null)
--SELECT *
--INTO #ACC_LOAN_TRN_DTL
--FROM (
--	SELECT * FROM ##ACC_LOAN_TRN_DTL_P8 
--	UNION ALL
--	SELECT * FROM ##ACC_LOAN_TRN_DTL_IRL 
--	UNION ALL
--	SELECT * FROM ##ACC_LOAN_TRN_DTL_IRCR 
--) TMP

UPDATE A SET 
--SELECT
  A.OUTAM=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	ELSE ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
	END
)
--	AS OUTAM,
, A.OPB=(--OPB=OUTAM
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	ELSE ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
	END
)
--	AS OPB,
, A.OOB=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ISNULL(ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2),0)--Co-Financed
		-ISNULL(ROUND((ISNULL(DTL.EOD_OUTSTANDING_3RD_CPTL_BAL_AMT,0) + ISNULL(DTL.EOD_OVD_3RD_CPTL_BAL_AMT,0)) / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2),0)
	ELSE ISNULL(ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2),0)
		-ISNULL(ROUND((ISNULL(DTL.EOD_OUTSTANDING_PTRMNL_CPTL_BAL_AMT,0) + ISNULL(DTL.EOD_OVD_PTRMNL_CPTL_BAL_AMT,0)) / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2),0)
	END
)
--	AS OOB,
, A.AMP=(
	CASE
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ISNULL(ROUND(ACC_LOAN_TRN_DTL.TRN_AMT_FC / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2) * ((100-cofnc.SENIORITY_PCT)/100) ,0)
	ELSE ISNULL(CASE 
				WHEN cofnc.ACC_ID IS NULL 
				THEN ROUND(ACC_LOAN_TRN_DTL.TRN_AMT_FC / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
				ELSE ROUND(ACC_LOAN_TRN_DTL.TRN_AMT_FC / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2) * (cofnc.SENIORITY_PCT/100)
				END ,0)
	END
)
--	AS AMP,
, A.INTRACC=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN NULL--Co-Financed
	ELSE ROUND((ISNULL(EDW_LEND_ACCRUALS.EOD_ACCR_PTRMNL_INT_AMT,0) + ISNULL(EDW_LEND_ACCRUALS.EOD_ACCR_PTRMNL_OVD_INT_AMT,0)) / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
	END
)
--	AS INTRACC,
, A.ARRRS=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ROUND(bal.EOD_OVD_3RD_PARTY_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	ELSE ROUND(bal.EOD_OVD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
	END
)
--	AS ARRRS,
, A.TRAM=(
	CASE
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	ELSE (
		CASE 
		WHEN EDW_LEND_ACC_LOAN_SCRZ.ACC_ID IS NOT NULL AND ISNULL(EDW_LEND_ACC_LOAN_SCRZ.DT_EXIT,'9999-12-31')>'2023-12-31'
		THEN ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT = 0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
		ELSE 0
		END
		)
	END
)
--	AS TRAM,
, A.PDD=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN '1900-01-01' --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε τιμή
	ELSE ISNULL(DATEADD(day, EDW_LEND_ACC_DPD_DLQ_SMY_M.DLY_DAYS*(-1)+1, '2023-12-31'),'1900-01-01')
	END
)
--	AS PDD
, A.INTRRD=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN NULL --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε τιμή
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN NULL--Co-Financed
    WHEN ISNULL(EDW_LEND_ACC_LOAN_RATES.DT_BASE_RATE_NXT_RVSN,'1111-11-11') >= '2023-12-31'
     AND EDW_LEND_ACC_LOAN_RATES.DT_BASE_RATE_NXT_RVSN <> '9999-12-31' 
    THEN EDW_LEND_ACC_LOAN_RATES.DT_BASE_RATE_NXT_RVSN 
	END
)
--	AS INTRRD
--SELECT A.*
FROM dbo.IFD_SUB A
--Τα Co-Financed έχουν δύο εγγραφές στο Anacredit
--Αν υπάρχει lend.ACC_COFNC και COF σημαίνει ότι είναι η πρώτη εγγραφή του Co-Financed, άρα ποσό * (SENIORITY_PCT/100)
--Αν υπάρχει lend.ACC_COFNC και όχι COF σημαίνει ότι είναι η δεύτερη εγγραφή του Co-Financed (δηλαδή η '_1') άρα ποσό * ((100-SENIORITY_PCT)/100)
LEFT JOIN dbo.IFD_SUB COF WITH(NOLOCK) ON COF.OBS_A_ID=A.OBS_A_ID AND COF.REF_DT=A.REF_DT AND COF.INSID+'_1'=A.INSID --AND COF.INSTST=A.INSTST AND COF.SOURCE_SYSTEM_ID=A.SOURCE_SYSTEM_ID
AND ISNUMERIC(COF.ACC_ID) = 1
LEFT JOIN src.EDW_com_FX_RATES fx WITH(NOLOCK) ON fx.FX_CCY_DESCR=A.CUR AND fx.DT_REC<='2023-12-31' AND fx.FX_DATE>'2023-12-31'
LEFT JOIN src.EDW_LEND_ACC_LOAN_BAL_EOD bal WITH(NOLOCK) ON bal.ACC_ID = A.ACC_ID AND bal.DT_EFF<='2023-12-31' AND bal.DT_END>'2023-12-31'
LEFT JOIN src.EDW_lend_ACC_COFNC cofnc ON cofnc.ACC_ID = A.ACC_ID AND cofnc.DT_END>EOMONTH('2023-12-31',-1) and cofnc.DT_EFF<=EOMONTH('2023-12-31',-1) AND cofnc.RCD_STS=1 AND cofnc.SENIORITY_PCT<>100
LEFT JOIN src.EDW_acc_ACC ACC ON ACC.ACC_ID = A.ACC_ID AND ACC.DT_END>'2023-12-31' and ACC.DT_EFF<='2023-12-31'
LEFT JOIN EDW_UAT.lend.ACC_LOAN_FIN_DTL DTL WITH(NOLOCK) ON DTL.ACC_ID = A.ACC_ID AND DTL.DT_EFF<='2023-12-31' AND DTL.DT_END>'2023-12-31'
--LEFT JOIN #ACC_LOAN_FIN_DTL DTL ON DTL.ACC_ID = A.ACC_ID
LEFT JOIN EDW_UAT.lend.ACC_LOAN_TRN_DTL ACC_LOAN_TRN_DTL WITH(NOLOCK) ON ACC_LOAN_TRN_DTL.ACC_ID = A.ACC_ID AND ACC_LOAN_TRN_DTL.DT_ACCOUNTING='2023-12-31'--ΘΕΛΕΙ SUM ΥΠΑΡΧΕΙ Ο ΠΙΝΑΚΑΣ ##ACC_LOAN_TRN_DTL_P8
--LEFT JOIN #ACC_LOAN_TRN_DTL ACC_LOAN_TRN_DTL ON ACC_LOAN_TRN_DTL.ACC_ID = A.ACC_ID
LEFT JOIN (
	SELECT *, ROW_NUMBER () OVER (PARTITION BY EDW_LEND_ACCRUALS.ACC_ID ORDER BY EDW_LEND_ACCRUALS.DT_REC DESC) AS RN
	FROM src.EDW_LEND_ACCRUALS EDW_LEND_ACCRUALS
	WHERE EDW_LEND_ACCRUALS.DT_REC<='2023-12-31'
AND EDW_LEND_ACCRUALS.ACC_ID=16210940
	) EDW_LEND_ACCRUALS ON EDW_LEND_ACCRUALS.ACC_ID = A.ACC_ID AND EDW_LEND_ACCRUALS.RN= 1
LEFT JOIN src.EDW_lend_ACC_LOAN_SCRZ EDW_lend_ACC_LOAN_SCRZ ON EDW_LEND_ACC_LOAN_SCRZ.ACC_ID = A.ACC_ID
	AND EDW_LEND_ACC_LOAN_SCRZ.DT_EFF <= '2023-12-31'
	AND EDW_LEND_ACC_LOAN_SCRZ.DT_END > '2023-12-31'
	AND EDW_LEND_ACC_LOAN_SCRZ.POOL_TP_ID in (8,9)
LEFT JOIN src.EDW_LEND_ACC_DPD_DLQ_SMY_M  EDW_LEND_ACC_DPD_DLQ_SMY_M ON EDW_LEND_ACC_DPD_DLQ_SMY_M.ACC_ID = A.ACC_ID
	AND EDW_LEND_ACC_DPD_DLQ_SMY_M.DT_REC= '2023-12-31' 
	AND EDW_LEND_ACC_DPD_DLQ_SMY_M.BCK_TP_ID='3'
LEFT JOIN src.EDW_lend_ACC_LOAN_RATES EDW_LEND_ACC_LOAN_RATES ON EDW_LEND_ACC_LOAN_RATES.ACC_ID = A.ACC_ID
 AND EDW_LEND_ACC_LOAN_RATES.RCD_STS =1 
 AND EDW_LEND_ACC_LOAN_RATES.DT_EFF <= '2023-12-31'
 AND EDW_LEND_ACC_LOAN_RATES.DT_END > '2023-12-31'
 and EDW_lend_ACC_LOAN_RATES.RATE_TP_ID=1  --cosmos20221018
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
AND ISNUMERIC(A.ACC_ID) = 1
AND A.INSID='9745183510P8'

SELECT * FROM dbo.IFD_SUB WHERE OBS_A_ID='GR011' AND REF_DT='2023-12-31' AND QUALIFICATION_FLAG='1'
SELECT * FROM dbo.AD_SUB WHERE OBS_A_ID='GR011' AND REF_DT='2023-12-31' AND QUALIFICATION_FLAG='1'

SELECT * FROM dbo.IFD_SUB WHERE REF_DT='2023-12-31' AND INSTST='3' AND INSID='9745183510P8'
SELECT ACCMRO, * FROM dbo.AD_SUB WHERE REF_DT='2023-12-31' AND INSID='9745183510P8'
LEFT JOIN src.EDW_LEND_ACC_LOAN_BAL_EOD bal WITH(NOLOCK) ON bal.ACC_ID = A.ACC_ID AND bal.DT_EFF<='2023-12-31' AND bal.DT_END>'2023-12-31'
	-- THEN ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	-- ELSE ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (A.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
select * from dbo.cid_sub where ref_dt='2023-12-31' and insid='9745183510P8'
select * from dbo.CRD_SUB where ref_dt='2023-12-31' and cid='4910344268'

--5015
--Υπήρξαν περιπτώσεις που οι ημέρες υπερημέριας πήγαιναν το PDD πιο πίσω από το STLD
UPDATE dbo.IFD_SUB SET PDD = STLD
WHERE OBS_A_ID='GR011' AND REF_DT='2023-12-31' AND PDD IS NOT NULL AND PDD<>'1900-01-01' AND PDD<STLD AND SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')

--θα κάνει updates όλα όσα τον προηγούμενο ήταν Q=1 και INSTST=0 που αυτόν τον μήνα έχουν Q=0
--ΠΡΟΣΟΧΗ!!! Επειδή κάνουμε REFRESH μόνο συγκεκριμένα πεδία μπορεί να μας σκάνε λάθη.
--Τον επόμενο, το Q=1 αλλά το INSTST<>0 κι έτσι θα το κάνει μόνο για έναν μήνα.
--όπως επίσης για τα INSTST=3, το Q=1 αλλά στέλνει όσο το system_id είναι _1 ή _2.
UPDATE B
SET B.QUALIFICATION_FLAG = 1
  , B.INSTST = 4
  , B.SOURCE_SYSTEM_ID = CASE
                         WHEN A.SOURCE_SYSTEM_ID NOT IN ('INSTI_1','INSTI_2','INSTU_1','INSTU_2')
                         THEN 'INSTU_1'
                         ELSE CONCAT('INSTU_',CAST(CAST(SUBSTRING(A.SOURCE_SYSTEM_ID,7,1) AS INT)+1 AS NVARCHAR(1))) --Αυξάνει τον μετρητή
                         END
-- SELECT *
FROM dbo.IFD_SUB B
LEFT JOIN dbo.IFD_SUB A ON A.OBS_A_ID=B.OBS_A_ID AND A.REF_DT=EOMONTH('2023-12-31',-1) AND B.CNID=A.CNID AND B.INSID=A.INSID 
WHERE B.OBS_A_ID = 'GR011' AND B.REF_DT='2023-12-31' 
AND (
     (A.QUALIFICATION_FLAG=1 AND A.INSTST=0)--τον προηγούμενο μήνα το είχαμε στείλει ως ενεργή
	 OR
	 (A.QUALIFICATION_FLAG=1 AND A.INSTST=3 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTU_1','INSTU_2'))
    )
AND B.QUALIFICATION_FLAG=0 --αυτόν τον μήνα είναι μηδέν

--Για όσα έχουν γίνει INSERT ή UPDATE με την παραπάνω διαδικασία πρέπει να ενημερωθεί σωστά το INSTST
--0: ενεργό (ACC_LIFE_STATUS_ID = 4 & OUTAM > 0)
--1: κλειστό (ACC_LIFE_STATUS_ID = 5 & AMP > 0 και δεν είναι 2, 3 ή μια συγκεκριμένη ομάδα του 4)
--2: μεταφέρθηκε (ACC_LOAN_EARTH_SUPPL_FIN exists)
--3: διαγράφηκε (ACC_PARAGRP.FNC_STATUS_ID exists in 3M period)
--4: other (είναι το default)
-- EDW -> Anacredit (TEST-START)
--DROP TABLE IF EXISTS #ACC_LOAN_EARTH_SUPPL_FIN
--CREATE TABLE #ACC_LOAN_EARTH_SUPPL_FIN(
--	[ACC_ID] [bigint] NOT NULL
--)
--INSERT INTO #ACC_LOAN_EARTH_SUPPL_FIN
--SELECT ACC_ID 
--FROM EDW.lend.ACC_LOAN_EARTH_SUPPL_FIN WITH(NOLOCK) WHERE DT_REF BETWEEN DATEADD(DAY,1,EOMONTH('2023-12-31',-1)) AND '2023-12-31'
-- EDW -> Anacredit (TEST-END)

-- 2 Non-Active (totally transferred)
UPDATE A
SET A.INSTST = 2 -- Non-Active (totally transferred)
, A.TRAM = D.OUTAM
FROM dbo.IFD_SUB A
LEFT JOIN src.EDW_acc_ACC B ON B.ACC_ID = TRY_CONVERT(BIGINT, A.ACC_ID) AND B.ACC_LIFE_STATUS_ID = 5
INNER JOIN #ACC_LOAN_EARTH_SUPPL_FIN C ON C.ACC_ID = TRY_CONVERT(BIGINT, A.ACC_ID)
LEFT JOIN dbo.IFD_SUB D ON D.OBS_A_ID=A.OBS_A_ID AND D.REF_DT=EOMONTH('2023-12-31',-1) AND D.CNID=A.CNID AND D.INSID=A.INSID 
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')

select * from #ACC_PARAGRP
where ACC_ID=16210940
-- EDW -> Anacredit (TEST-START)
DROP TABLE IF EXISTS #ACC_PARAGRP
CREATE TABLE #ACC_PARAGRP(
	[ACC_ID] [bigint] NOT NULL
)
INSERT INTO #ACC_PARAGRP
SELECT ACC_ID
FROM EDW_uat.acc.ACC_PARAGRP WITH(NOLOCK)
WHERE TBL_SCHM_MN='acc'
AND TBL_NM='ACC'
AND TBL_FLD_NM='FNC_STATUS_ID'
AND PARAGROUP_ID=312 
AND PARALIST_ID=4
AND (
    (DT_EFF BETWEEN DATEADD(DAY,1,EOMONTH('2023-12-31',-3)) AND '2023-12-31')
	 OR
    (DT_END BETWEEN DATEADD(DAY,1,EOMONTH('2023-12-31',-3)) AND '2023-12-31')
   )
-- EDW -> Anacredit (TEST-END)
-- 3 Non-Active (totally written-off)
UPDATE A
SET A.INSTST = 3 -- Non-Active (totally written-off)
  , A.OUTAM = 0
  , A.OPB = 0
  , A.OOB = 0
FROM dbo.IFD_SUB A
INNER JOIN #ACC_PARAGRP B ON B.ACC_ID = TRY_CONVERT(BIGINT, A.ACC_ID)
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')

-- 4 Non-Active (other)
-- Αυτή είναι η default τιμή, ωστόσο πρέπει να καταγράψουμε αυτήν την συγκεκριμένη ομάδα
-- καθώς για να βρούμε τα 1 πρέπει να εξαιρέσουμε αυτά τα συγκεκριμένα
-- Anacredit -> EDW
DROP TABLE IF EXISTS #IFD
CREATE TABLE #IFD(
	[ACC_ID] [bigint] NOT NULL
)
INSERT INTO #IFD
SELECT A.ACC_ID
FROM dbo.IFD_SUB A
LEFT JOIN src.EDW_acc_ACC B ON B.ACC_ID = TRY_CONVERT(BIGINT, A.ACC_ID) AND B.ACC_LIFE_STATUS_ID = 5
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND ISNUMERIC(A.ACC_ID)=1

-- EDW -> Anacredit (TEST-START)
--DROP TABLE IF EXISTS #ACC_LOAN_TRNF
--CREATE TABLE #ACC_LOAN_TRNF(
--	[ACC_ID] [bigint] NOT NULL
--)
--INSERT INTO #ACC_LOAN_TRNF
--SELECT A.ORIG_ACC_ID AS ACC_ID
--FROM EDW.lend.ACC_LOAN_TRNF A WITH(NOLOCK)
--INNER JOIN #IFD B WITH(NOLOCK) ON B.ACC_ID = A.ORIG_ACC_ID
--WHERE A.TRNF_TP_ID IN (1,3)
-- EDW -> Anacredit (TEST-END)

-- 1 Non-Active (totally repaid)
UPDATE A
SET A.INSTST = 1 -- Non-Active (totally repaid)
FROM dbo.IFD_SUB A
INNER JOIN src.EDW_acc_ACC B ON B.ACC_ID = TRY_CONVERT(BIGINT, A.ACC_ID) AND B.ACC_LIFE_STATUS_ID = 5
LEFT JOIN #ACC_LOAN_TRNF C ON C.ACC_ID = B.ACC_ID
WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND A.AMP>0
AND C.ACC_ID IS NULL -- είναι 4
AND A.INSTST = 4 -- το INSTST δεν έχει αλλάξει ακόμα (δεν είναι 2 ή 3)


-- CID CID CID CID
-- CID CID CID CID
-- CID CID CID CID
-- CID CID CID CID

--SELECT SOURCE_SYSTEM_ID, * FROM dbo.CID_SUB WHERE INSID='1969899820P8' AND REF_DT='2023-12-31'

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.CID_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_CID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')
--SELECT * FROM dbo.IFD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND INSTST <> 0 AND SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')--2975

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CID_SUB A WITH(NOLOCK)
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST <> 0 AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα IFD(A), όσα δεν έχουν CID αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_CID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')
INSERT INTO dbo.CID_SUB
SELECT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_CID + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
	  ,C.[CID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[CRL]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
--SELECT A.*
FROM dbo.IFD_SUB A WITH(NOLOCK)
LEFT JOIN dbo.CID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID
LEFT JOIN dbo.CID_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND B.OBS_A_ID IS NULL
AND C.OBS_A_ID IS NOT NULL--8941

--SELECT * FROM dbo.CID_SUB WHERE SOURCE_SYSTEM_ID='INSTI'
--SELECT INSTST, * FROM dbo.IFD_SUB WHERE REF_DT='2023-12-31' AND INSID='2043273008P8'
--SELECT * FROM dbo.CID_SUB WHERE SOURCE_SYSTEM_ID='INSTI' AND INSID='2043273008P8'

-- CRD CRD CRD CRD
-- CRD CRD CRD CRD
-- CRD CRD CRD CRD
-- CRD CRD CRD CRD

--SELECT CID FROM dbo.CID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI','INSTU')--8941

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.CRD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_CRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID AND B.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

--Βρες τα μοναδικά CID
DROP TABLE IF EXISTS #CID
SELECT A.OBS_A_ID, A.REF_DT, A.CID--, A.SOURCE_SYSTEM_ID
INTO #CID
FROM dbo.CID_SUB A 
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
GROUP BY A.OBS_A_ID, A.REF_DT, A.CID--, A.SOURCE_SYSTEM_ID

-- Από τα νέα CID(A), όσα δεν έχουν CRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_CRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')
INSERT INTO dbo.CRD_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_CRD + ROW_NUMBER() OVER (ORDER BY B.REF_DT) AS [RECID]
      ,C.[CID]
      ,C.[NIDT]
      ,C.[NID]
      ,C.[AFM]
      ,C.[IMO]
      ,C.[GEMH]
      ,C.[LEI]
      ,C.[ESD]
      ,C.[HOUID]
      ,C.[IPUID]
      ,C.[UPCID]
      ,C.[NAME]
      ,C.[AStr]
      ,C.[AC]
      ,C.[ACTY]
      ,C.[APC]
      ,C.[ACTR]
      ,C.[LF]
      ,C.[ISctr]
      ,C.[EA]
      ,C.[SLP]
      ,C.[DILP]
      ,C.[ES]
      ,C.[DES]
      ,C.[NE]
      ,C.[BST]
      ,C.[AT]
      ,C.[AST]
      ,C.[CR]
      ,C.[OLD]
      ,C.[PR]
      ,C.[HO]
      ,C.[PAR]
      ,C.[UP]
      ,C.[OCR]
      ,C.[SRV]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
      ,C.[DEL_APPV_DIV_ID]
      ,C.[DEPT_APPV_DIV_ID]
      ,C.[EM]
      ,C.[PH]
FROM #CID A 
LEFT JOIN dbo.CRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID
LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31' --AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND B.CID IS NULL
AND C.CID IS NOT NULL--223

--CID	CNID	INSID
--672520036	0917048190	0918670374P8
--672520036	0917048190	0918670374P8_1

-- CRID CRID CRID CRID
-- CRID CRID CRID CRID
-- CRID CRID CRID CRID
-- CRID CRID CRID CRID

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.CRID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.CRID_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_CRID BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRID_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CRID_SUB A WITH(NOLOCK)
INNER JOIN #CID B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα CID(A), όσα δεν έχουν CRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
INSERT INTO dbo.CRID_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_CRID + ROW_NUMBER() OVER (ORDER BY B.REF_DT) AS [RECID]
      ,C.[CID]
      ,C.[PD]
      ,C.[DS]
      ,C.[DSD]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
FROM #CID A 
LEFT JOIN dbo.CRID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID
LEFT JOIN dbo.CRID_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31' --AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND B.CID IS NULL
AND C.CID IS NOT NULL--146

-- JLD JLD JLD JLD
-- JLD JLD JLD JLD
-- JLD JLD JLD JLD
-- JLD JLD JLD JLD

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.JLD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.JLD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_JLD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.JLD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.JLD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CID_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID AND B.INSID=A.INSID AND B.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα CID/INSID(A), όσα δεν έχουν JLD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
INSERT INTO dbo.JLD_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_JLD + ROW_NUMBER() OVER (ORDER BY B.REF_DT) AS [RECID]
      ,C.[CID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[JLBAM]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
FROM dbo.CID_SUB A
LEFT JOIN dbo.JLD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.CID=A.CID AND B.INSID=A.INSID
LEFT JOIN dbo.JLD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.CID=A.CID AND C.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
AND B.CID IS NULL
AND C.CID IS NOT NULL--146

-- AD AD AD AD
-- AD AD AD AD
-- AD AD AD AD
-- AD AD AD AD

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.AD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.AD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_AD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.AD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.AD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST <> 0 AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα INSID(A), όσα δεν έχουν AD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
INSERT INTO dbo.AD_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_AD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,C.[ACC_ID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[ACCNTC]
      ,C.[BSR]
      ,C.[ACCMRO]
      ,C.[ACCMIMP]
      ,C.[IMPS]
      ,C.[IMPASSM]
      ,C.[SRCENC]
      ,C.[ACCMFVC]
      ,C.[PERS]
      ,C.[PRESD]
      ,C.[PRVOB]
      ,C.[FRBS]
      ,C.[FRBSD]
      ,C.[RECSD]
      ,C.[PP]
      ,C.[CAMM]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
FROM dbo.IFD_SUB A WITH(NOLOCK)
LEFT JOIN dbo.AD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID
LEFT JOIN dbo.AD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.INSID=A.INSID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND B.OBS_A_ID IS NULL
AND C.OBS_A_ID IS NOT NULL--2975

-- IPRD IPRD IPRD IPRD
-- IPRD IPRD IPRD IPRD
-- IPRD IPRD IPRD IPRD
-- IPRD IPRD IPRD IPRD

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.IPRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.IPRD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_IPRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.IPRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.IPRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID AND B.INSTST <> 0 AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα INSID(A), όσα δεν έχουν IPRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_IPRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.IPRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')
INSERT INTO dbo.IPRD_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_IPRD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,C.[CNID]
      ,C.[INSID]
      ,C.[PRID]
      ,C.[PRAV]
      ,C.[PR3PPRI]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
FROM dbo.IFD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IPRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.INSID=A.INSID AND C.CNID=A.CNID
--LEFT JOIN dbo.IPRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID--2:26 min
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3','INSTU_1','INSTU_2','INSTU_3')
AND NOT EXISTS (SELECT NULL FROM dbo.IPRD_SUB B WITH(NOLOCK) WHERE B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID)--55 sec
--AND B.OBS_A_ID IS NULL

--CNID	INSID	PRID
--0117001010	0111966308P8	2128063
--0117001010	0111966308P8	2130846
--0117001010	0111966308P8	2130847
--0117001010	0111966308P8	2407494
--0117001010	0111966308P8	400724974

--SELECT QUALIFICATION_FLAG, * FROM dbo.IPRD_SUB WHERE REF_DT='2023-12-31' AND INSID='0111966308P8'--5
--SELECT QUALIFICATION_FLAG, * FROM dbo.IPRD_SUB WHERE REF_DT='2023-12-31' AND INSID='0111966308P8'--0
--SELECT QUALIFICATION_FLAG, * FROM dbo.IFD_SUB WHERE REF_DT='2023-12-31' AND INSID='0111966308P8'--1

-- PRD PRD PRD PRD
-- PRD PRD PRD PRD
-- PRD PRD PRD PRD
-- PRD PRD PRD PRD

--Βρες τα μοναδικά PRD
DROP TABLE IF EXISTS #PRD_UNQ
SELECT A.OBS_A_ID, A.REF_DT, A.PRID, A.SOURCE_SYSTEM_ID
INTO #PRD_UNQ
FROM dbo.IPRD_SUB A 
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
GROUP BY A.OBS_A_ID, A.REF_DT, A.PRID, A.SOURCE_SYSTEM_ID

--η διαδικασία πρέπει να είναι rerunable άρα θα σβίνει τις αλλαγές
DELETE FROM dbo.PRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31' AND SOURCE_SYSTEM_ID IN ('INSTI')
UPDATE B
SET B.QUALIFICATION_FLAG = 0
  , B.SOURCE_SYSTEM_ID ='DELETED'--δεν κρατάμε κάπου την τελευταία τιμή
FROM dbo.PRD_SUB B
WHERE B.OBS_A_ID ='GR011' AND B.REF_DT='2023-12-31' AND B.SOURCE_SYSTEM_ID IN ('INSTU')

DECLARE @MAX_RECID_PRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.PRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.PRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.IPRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.PRID=A.PRID AND B.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' 
AND A.QUALIFICATION_FLAG=0

-- Από τα νέα INSID(A), όσα δεν έχουν IPRD αυτόν τον μήνα(B), πάρτα από τον προηγούμενο(C). (Insert)
--DECLARE @MAX_RECID_PRD BIGINT = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.PRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')
INSERT INTO dbo.PRD_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,C.[REP_A_ID]
      ,C.[OBS_A_ID]
	  ,@MAX_RECID_PRD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,C.[PRID]
      ,C.[PRCID]
      ,C.[PRT]
      ,C.[PRV]
      ,C.[PRVT]
      ,C.[PRVA]
      ,C.[RECL]
      ,C.[PRVD]
      ,C.[PRMD]
      ,C.[PROV]
      ,C.[PROVD]
      ,C.[INSERT_TIMESTAMP]
      ,C.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,C.[QUALIFICATION_FLAG]
      ,C.[DATA_VERSION]
FROM #PRD_UNQ A WITH(NOLOCK)
INNER JOIN dbo.PRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=EOMONTH('2023-12-31',-1) AND C.PRID=A.PRID
LEFT JOIN dbo.PRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.PRID=A.PRID--2:26 min
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
--AND NOT EXISTS (SELECT NULL FROM dbo.IPRD_SUB B WITH(NOLOCK) WHERE B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.CNID=A.CNID)--55 sec
AND B.OBS_A_ID IS NULL

-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD
-- PRD -> PRCID -> CRD

-- Όσα υπάρχουν στον μήνα με Q=0 (A). Κανένα; Άρα θα πρέπει να τα βρεις από τον προηγούμενο μήνα. Αν βρεις κάποια, κάντα Q=1 (Update)
UPDATE A
SET A.QUALIFICATION_FLAG = 1
  , A.SOURCE_SYSTEM_ID = 'INSTU'
FROM dbo.CRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.PRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.PRCID=A.CID AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31'
AND A.QUALIFICATION_FLAG=0

SET @MAX_RECID_CRD = (SELECT MAX(TRY_CONVERT(BIGINT, RECID)) FROM dbo.CRD_SUB WHERE OBS_A_ID ='GR011' AND REF_DT='2023-12-31')

--Βρες τα μοναδικά CRD
DROP TABLE IF EXISTS #CRD
SELECT B.OBS_A_ID, A.REF_DT, B.CID
INTO #CRD
FROM dbo.PRD_SUB A WITH(NOLOCK)
INNER JOIN dbo.CRD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=EOMONTH(A.REF_DT,-1) AND B.CID=A.PRCID
--LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=A.REF_DT AND C.CID=A.PRCID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT='2023-12-31' AND A.SOURCE_SYSTEM_ID IN ('INSTI','INSTU')
--AND C.CID IS NULL
GROUP BY B.OBS_A_ID, A.REF_DT, B.CID

DROP TABLE IF EXISTS #CRD_2
SELECT A.OBS_A_ID, A.REF_DT, A.CID
INTO #CRD_2
FROM #CRD A WITH(NOLOCK)
LEFT JOIN dbo.CRD_SUB C WITH(NOLOCK) ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT=A.REF_DT AND C.CID=A.CID
WHERE C.CID IS NULL
GROUP BY A.OBS_A_ID, A.REF_DT, A.CID

-- Μετέφερε τα CRD(Β) από τον προηγούμενο(Α). (Insert)
INSERT INTO dbo.CRD_SUB
SELECT DISTINCT '2023-12-31' AS [REF_DT]
      ,A.[REP_A_ID]
      ,A.[OBS_A_ID]
	  ,@MAX_RECID_CRD + ROW_NUMBER() OVER (ORDER BY A.REF_DT) AS [RECID]
      ,A.[CID]
      ,A.[NIDT]
      ,A.[NID]
      ,A.[AFM]
      ,A.[IMO]
      ,A.[GEMH]
      ,A.[LEI]
      ,A.[ESD]
      ,A.[HOUID]
      ,A.[IPUID]
      ,A.[UPCID]
      ,A.[NAME]
      ,A.[AStr]
      ,A.[AC]
      ,A.[ACTY]
      ,A.[APC]
      ,A.[ACTR]
      ,A.[LF]
      ,A.[ISctr]
      ,A.[EA]
      ,A.[SLP]
      ,A.[DILP]
      ,A.[ES]
      ,A.[DES]
      ,A.[NE]
      ,A.[BST]
      ,A.[AT]
      ,A.[AST]
      ,A.[CR]
      ,A.[OLD]
      ,A.[PR]
      ,A.[HO]
      ,A.[PAR]
      ,A.[UP]
      ,A.[OCR]
      ,A.[SRV]
      ,A.[INSERT_TIMESTAMP]
      ,A.[INSERT_ETL_RUN_ID]
      ,'INSTI' AS [SOURCE_SYSTEM_ID]
      ,A.[QUALIFICATION_FLAG]
      ,A.[DATA_VERSION]
      ,A.[DEL_APPV_DIV_ID]
      ,A.[DEPT_APPV_DIV_ID]
      ,A.[EM]
      ,A.[PH]
FROM dbo.CRD_SUB A WITH(NOLOCK)
INNER JOIN #CRD_2 C ON C.OBS_A_ID=A.OBS_A_ID AND C.REF_DT='2023-12-31' AND C.CID=A.CID
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT=EOMONTH('2023-12-31',-1) 

-- UPDATE AD
-- UPDATE AD
-- UPDATE AD
-- UPDATE AD

--Όσα έχουν INSTST=3 πρέπει να έχουν ACCMRO = OUTAM πριν τον μηδενισμό
UPDATE A SET
  A.ACCMRO=(
	CASE
	WHEN ACC.ACC_LIFE_STATUS_ID = 5 THEN 0 --Αν έχει κλείσει ο λογ/σμός δεν πρέπει να στέλνουμε ποσό
	WHEN cofnc.ACC_ID IS NOT NULL AND COF.OBS_A_ID IS NOT NULL--Co-Financed (2nd Row)
	THEN ROUND(bal.EOD_3RD_PARTY_BAL_AMT / CASE WHEN (B.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)--Co-Financed
	ELSE ROUND(bal.EOD_PTRMNL_BOOK_BAL_AMT / CASE WHEN (B.CUR='EUR' OR fx.FX_ECBREF_PCT=0) THEN 1 ELSE fx.FX_ECBREF_PCT END,2)
	END
)
--SELECT A.QUALIFICATION_FLAG, A.BSR, B.OUTAM, B.OPB, B.OOB, B.AMP
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST IN ('3')
LEFT JOIN dbo.IFD_SUB COF WITH(NOLOCK) ON COF.OBS_A_ID=A.OBS_A_ID AND COF.REF_DT=A.REF_DT AND COF.INSID+'_1'=A.INSID
AND ISNUMERIC(COF.ACC_ID) = 1
LEFT JOIN src.EDW_com_FX_RATES fx WITH(NOLOCK) ON fx.FX_CCY_DESCR=B.CUR AND fx.DT_REC<='2023-12-31' AND fx.FX_DATE>'2023-12-31'
LEFT JOIN src.EDW_LEND_ACC_LOAN_BAL_EOD bal WITH(NOLOCK) ON bal.ACC_ID = A.ACC_ID AND bal.DT_EFF<='2023-12-31' AND bal.DT_END>'2023-12-31'
LEFT JOIN src.EDW_lend_ACC_COFNC cofnc ON cofnc.ACC_ID = A.ACC_ID AND cofnc.DT_END>EOMONTH('2023-12-31',-1) and cofnc.DT_EFF<=EOMONTH('2023-12-31',-1) AND cofnc.RCD_STS=1 AND cofnc.SENIORITY_PCT<>100
LEFT JOIN src.EDW_acc_ACC ACC ON ACC.ACC_ID = A.ACC_ID AND ACC.DT_END>'2023-12-31' and ACC.DT_EFF<='2023-12-31'
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31'


--Τα δάνεια που αποπληρώθηκαν πλήρως INSTST='1' σε ένα μήνα αναφοράς πρέπει να αναγγελθούν για έναν επιπλέον μήνα αναφοράς με μηδενικά 
--Outstanding Nominal Amount (OUTAM=0), Outstanding Principal Balance (OPB=0) και Other Outstanding Balances (OOB=0), με ποσό στο πεδίο Amount Paid (AMP<>0),
--το πεδίο Balance Sheet Recognition του πίνακα Accounting συμπληρωμένο με την τιμή 3: Entirely derecognised (BSR='3')
--και το πεδίο Instrument Status Flag με την τιμή 1: Non-Active (totally repaid) (νέος έλεγχος 99005 με αναδρομική ισχύ από στοιχεία Δεκεμβρίου 2023)
--Ομοίως και όσα μεταβιβάστηκαν πλήρως INSTST='2'
UPDATE A SET
  A.BSR='3'
--SELECT A.QUALIFICATION_FLAG, A.BSR, B.OUTAM, B.OPB, B.OOB, B.AMP
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST IN ('1','2')
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31'

--Όταν κάναμε το IFD.INSTST='4' χρειάστηκε να κάνουμε και τα παρακάτω:
UPDATE A SET 
  A.BSR='3'
--, A.ACCNTC='' --5110 Accounting classification
--, A.CAMM=NULL --5055 Carrying amount
--, A.ACCMIMP=NULL, ACCMFVC=NULL --5075 Accumulated impairment,  Accumulated changes in fair value due to credit risk
, A.IMPASSM='' --5034 Impairment assessment method
, A.IMPS='' --5074 Type of impairment
--SELECT A.QUALIFICATION_FLAG, A.BSR, A.ACCNTC, A.CAMM, *
FROM dbo.AD_SUB A
INNER JOIN dbo.IFD_SUB B WITH(NOLOCK) ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND B.INSID=A.INSID AND B.INSTST='4'
WHERE A.OBS_A_ID ='GR011' AND A.REF_DT = '2023-12-31'

--Επίσης είχαμε 2150 σκασίματα για όλα τα AD_SUB με BSR='3'. Μας έσκασαν με κωδικούς 1073 και 1074 και ξεπεράστηκε το πρόβλημα με τις παρακάτω τιμές.
UPDATE dbo.AD_SUB SET SRCENC='1' --1073 Sources of encumbrance
, ACCNTC='' --5110 Accounting classification
, ACCMRO=0 --1074 Accumulated write-offs
, CAMM=NULL --5055 Carrying amount
, ACCMIMP=NULL, ACCMFVC=NULL --5075 Accumulated impairment,  Accumulated changes in fair value due to credit risk
--SELECT QUALIFICATION_FLAG, BSR, ACCNTC, CAMM, * FROM dbo.AD_SUB
WHERE OBS_A_ID ='GR011' AND REF_DT = '2023-12-31' AND BSR='3'


-- UPDATE JLD
-- UPDATE JLD
-- UPDATE JLD
-- UPDATE JLD
-- UPDATE JLD

UPDATE A SET A.JLBAM=B.OUTAM --5027 Joint liability amount
--SELECT B.INSID, B.OUTAM, A.JLBAM
FROM dbo.JLD_SUB A
INNER JOIN dbo.IFD_SUB B ON B.OBS_A_ID=A.OBS_A_ID AND B.REF_DT=A.REF_DT AND A.INSID=B.INSID AND B.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
WHERE A.OBS_A_ID='GR011' AND A.REF_DT='2023-12-31'

--UPDATE A SET 
----SELECT
--  A.OUTAM=(
--	10996967.93
--)
----  A.OUTAM=(
----	10996967.91
----)
--FROM dbo.IFD_SUB A
----Τα Co-Financed έχουν δύο εγγραφές στο Anacredit
----Αν υπάρχει lend.ACC_COFNC και COF σημαίνει ότι είναι η πρώτη εγγραφή του Co-Financed, άρα ποσό * (SENIORITY_PCT/100)
----Αν υπάρχει lend.ACC_COFNC και όχι COF σημαίνει ότι είναι η δεύτερη εγγραφή του Co-Financed (δηλαδή η '_1') άρα ποσό * ((100-SENIORITY_PCT)/100)
--LEFT JOIN dbo.IFD_SUB COF WITH(NOLOCK) ON COF.OBS_A_ID=A.OBS_A_ID AND COF.REF_DT=A.REF_DT AND COF.INSTST=A.INSTST AND COF.SOURCE_SYSTEM_ID=A.SOURCE_SYSTEM_ID AND COF.INSID=A.INSID+'_1' 
--AND ISNUMERIC(COF.ACC_ID) = 1
--LEFT JOIN src.EDW_com_FX_RATES fx WITH(NOLOCK) ON fx.FX_CCY_DESCR=A.CUR AND fx.DT_REC<='2023-12-31' AND fx.FX_DATE>'2023-12-31'
--LEFT JOIN src.EDW_LEND_ACC_LOAN_BAL_EOD bal WITH(NOLOCK) ON bal.ACC_ID = A.ACC_ID AND bal.DT_EFF<='2023-12-31' AND bal.DT_END>'2023-12-31'
--LEFT JOIN src.EDW_lend_ACC_COFNC cofnc ON cofnc.ACC_ID = A.ACC_ID AND cofnc.DT_END>'2023-12-31' and cofnc.DT_EFF<='2023-12-31' AND cofnc.RCD_STS=1 AND cofnc.SENIORITY_PCT<>100
------LEFT JOIN EDW_UAT.lend.ACC_LOAN_FIN_DTL DTL WITH(NOLOCK) ON DTL.ACC_ID = A.ACC_ID AND DTL.DT_EFF<='2023-12-31' AND DTL.DT_END>'2023-12-31'
----LEFT JOIN #ACC_LOAN_FIN_DTL DTL ON DTL.ACC_ID = A.ACC_ID
------LEFT JOIN EDW_UAT.lend.ACC_LOAN_TRN_DTL ACC_LOAN_TRN_DTL WITH(NOLOCK) ON ACC_LOAN_TRN_DTL.ACC_ID = A.ACC_ID AND ACC_LOAN_TRN_DTL.DT_ACCOUNTING='2023-12-31'--ΘΕΛΕΙ SUM ΥΠΑΡΧΕΙ Ο ΠΙΝΑΚΑΣ ##ACC_LOAN_TRN_DTL_P8
----LEFT JOIN #ACC_LOAN_TRN_DTL ACC_LOAN_TRN_DTL ON ACC_LOAN_TRN_DTL.ACC_ID = A.ACC_ID
----LEFT JOIN (
----	SELECT *, ROW_NUMBER () OVER (PARTITION BY EDW_LEND_ACCRUALS.ACC_ID ORDER BY EDW_LEND_ACCRUALS.DT_REC DESC) AS RN
----	FROM src.EDW_LEND_ACCRUALS EDW_LEND_ACCRUALS
----	WHERE EDW_LEND_ACCRUALS.DT_REC<='2023-12-31'
----	) EDW_LEND_ACCRUALS ON EDW_LEND_ACCRUALS.ACC_ID = A.ACC_ID AND EDW_LEND_ACCRUALS.RN= 1
----LEFT JOIN src.EDW_lend_ACC_LOAN_SCRZ EDW_lend_ACC_LOAN_SCRZ ON EDW_LEND_ACC_LOAN_SCRZ.ACC_ID = A.ACC_ID
----	AND EDW_LEND_ACC_LOAN_SCRZ.DT_EFF <= '2023-12-31'
----	AND EDW_LEND_ACC_LOAN_SCRZ.DT_END > '2023-12-31'
----	AND EDW_LEND_ACC_LOAN_SCRZ.POOL_TP_ID in (8,9)
----LEFT JOIN src.EDW_LEND_ACC_DPD_DLQ_SMY_M  EDW_LEND_ACC_DPD_DLQ_SMY_M ON EDW_LEND_ACC_DPD_DLQ_SMY_M.ACC_ID = A.ACC_ID
----	AND EDW_LEND_ACC_DPD_DLQ_SMY_M.DT_REC= '2023-12-31' 
----	AND EDW_LEND_ACC_DPD_DLQ_SMY_M.BCK_TP_ID='3'
--WHERE A.OBS_A_ID = 'GR011' AND A.REF_DT='2023-12-31' AND A.INSTST <> 0 AND A.SOURCE_SYSTEM_ID IN ('INSTI_1','INSTI_2','INSTI_3')
--AND ISNUMERIC(A.ACC_ID) = 1
--AND A.ACC_ID = '56664711'

--declare '2023-12-31'Text varchar(30) = cast('2023-12-31' as varchar)
--RAISERROR('%s %s', 15, 2, '2023-12-31'Text, 'GR011')

